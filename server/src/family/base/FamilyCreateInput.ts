/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { UserCreateNestedManyWithoutFamiliesInput } from "./UserCreateNestedManyWithoutFamiliesInput";
import { Type } from "class-transformer";
import { RecipeCreateNestedManyWithoutFamiliesInput } from "./RecipeCreateNestedManyWithoutFamiliesInput";
import { SmartTagCreateNestedManyWithoutFamiliesInput } from "./SmartTagCreateNestedManyWithoutFamiliesInput";

@InputType()
class FamilyCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutFamiliesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutFamiliesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutFamiliesInput, {
    nullable: true,
  })
  member?: UserCreateNestedManyWithoutFamiliesInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutFamiliesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutFamiliesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutFamiliesInput, {
    nullable: true,
  })
  ownUsers?: UserCreateNestedManyWithoutFamiliesInput;

  @ApiProperty({
    required: false,
    type: () => RecipeCreateNestedManyWithoutFamiliesInput,
  })
  @ValidateNested()
  @Type(() => RecipeCreateNestedManyWithoutFamiliesInput)
  @IsOptional()
  @Field(() => RecipeCreateNestedManyWithoutFamiliesInput, {
    nullable: true,
  })
  recipes?: RecipeCreateNestedManyWithoutFamiliesInput;

  @ApiProperty({
    required: false,
    type: () => SmartTagCreateNestedManyWithoutFamiliesInput,
  })
  @ValidateNested()
  @Type(() => SmartTagCreateNestedManyWithoutFamiliesInput)
  @IsOptional()
  @Field(() => SmartTagCreateNestedManyWithoutFamiliesInput, {
    nullable: true,
  })
  smartTags?: SmartTagCreateNestedManyWithoutFamiliesInput;
}

export { FamilyCreateInput };
