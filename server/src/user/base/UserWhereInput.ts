/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FamilyListRelationFilter } from "../../family/base/FamilyListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { RecipeListRelationFilter } from "../../recipe/base/RecipeListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { FamilyWhereUniqueInput } from "../../family/base/FamilyWhereUniqueInput";
import { RatingListRelationFilter } from "../../rating/base/RatingListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => FamilyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FamilyListRelationFilter)
  @IsOptional()
  @Field(() => FamilyListRelationFilter, {
    nullable: true,
  })
  families?: FamilyListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RecipeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecipeListRelationFilter)
  @IsOptional()
  @Field(() => RecipeListRelationFilter, {
    nullable: true,
  })
  favoriteRecipes?: RecipeListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FamilyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => FamilyWhereUniqueInput)
  @IsOptional()
  @Field(() => FamilyWhereUniqueInput, {
    nullable: true,
  })
  ownFamily?: FamilyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => RecipeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecipeListRelationFilter)
  @IsOptional()
  @Field(() => RecipeListRelationFilter, {
    nullable: true,
  })
  postedRecipes?: RecipeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RatingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RatingListRelationFilter)
  @IsOptional()
  @Field(() => RatingListRelationFilter, {
    nullable: true,
  })
  ratings?: RatingListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput };
